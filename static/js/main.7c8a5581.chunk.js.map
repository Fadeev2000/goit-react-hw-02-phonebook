{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInput","e","setState","target","value","handleSubmit","preventDefault","newContact","id","uuidv4","isNewContact","props","onSubmit","alert","resetInput","contact","this","onCheck","some","el","nameInput","isTwoInputValue","className","css","form","form__label","type","form__input","pattern","title","required","onChange","form__button","disabled","Component","Filter","label","input","ContactList","items","onDeleteContact","map","item","li","button","onClick","App","contacts","filter","addContact","prevState","deleteContact","contactId","changeFilter","normalizedFilter","toLowerCase","includes","visibleContacts","getVisibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c8a5581.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3VRlZ\",\"form__label\":\"ContactForm_form__label__Gw9Yx\",\"form__input\":\"ContactForm_form__input__2vt0B\",\"form__button\":\"ContactForm_form__button__3NjfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3-N6t\",\"input\":\"Filter_input__V6Kcl\",\"form__button\":\"Filter_form__button__36i6d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__jcOtm\",\"button\":\"ContactList_button__2eLL9\"};","import { Component } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport css from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    };\r\n\r\n    isNewContact(contact) {\r\n        return !this.props.onCheck.some(el => el.name === contact);\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    };\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newContact = { name: this.state.name, id: uuidv4(), number: this.state.number };\r\n                \r\n        if (this.isNewContact(newContact.name)) {\r\n            this.props.onSubmit(newContact);\r\n        } else {\r\n            alert(`${newContact.name} is already in contacts`);\r\n        }\r\n\r\n        this.resetInput('name');\r\n        this.resetInput('number');\r\n    };\r\n    \r\n    resetInput(nameInput) {\r\n        this.setState({ [nameInput]: '' });\r\n    };    \r\n    \r\n    render() {\r\n        const isTwoInputValue = this.state.name !== '' && this.state.number !== '';\r\n\r\n        return (\r\n            <form className={css.form} onSubmit={this.handleSubmit}>\r\n            <label className={css.form__label}>Name\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                className={css.form__input}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.handleInput}\r\n              />\r\n            </label>\r\n            <label className={css.form__label}>Number\r\n              <input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                className={css.form__input}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                value={this.state.number}\r\n                onChange={this.handleInput}\r\n              />\r\n            </label>\r\n                {isTwoInputValue ?\r\n                    <button type=\"submit\" className={css.form__button}>Add contact</button> :\r\n                    <button type=\"submit\" className={css.form__button} disabled>Add contact</button>\r\n                }\r\n          </form>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    onCheck: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  })).isRequired\r\n}\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport css from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n    return (\r\n        <label className={css.label}>Find contacts by name\r\n            <input\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                className={css.input}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n        </label>\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\r\nimport css from './ContactList.module.css';\r\n\r\nfunction ContactList({ items, onDeleteContact }) {\r\n    return (\r\n         <ul>\r\n        {items.map(item => (<li key={item.id} className={css.li}>{item.name}: {item.number}\r\n          <button className={css.button} type=\"button\" onClick={() => onDeleteContact(item.id)}>Delete</button>\r\n        </li>))}\r\n          </ul>\r\n    );\r\n}\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ContactList;","//import logo from './logo.svg';\nimport { Component } from 'react';\n//import { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = newContact => {\n    this.setState(prevState => (\n      { contacts: [newContact, ...prevState.contacts] }\n    ));\n  };\n  \n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  };\n\n  getVisibleContacts() {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    const items = filter === '' ?\n      contacts :\n      contacts.filter(item => item.name.toLowerCase().includes(normalizedFilter)\n      );\n    return items;\n  };\n  \n  render() {\n    const { filter, contacts } = this.state; \n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <div>\n          <h1>Fhonebook</h1>\n          <ContactForm onSubmit={this.addContact} onCheck={contacts}/>\n          \n          <h2>Contacts</h2>\n          {contacts.length !== 0 && (\n            <>\n              <Filter value={filter} onChange={this.changeFilter} />\n\n              <ContactList items={visibleContacts} onDeleteContact={this.deleteContact} />\n            </>\n          )}\n         \n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}